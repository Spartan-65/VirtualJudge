"""
Django settings for VirtualJudge project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'change the secret key'

# SECURITY WARNING: don't run with debug turned on in production!

if os.environ.get('vj_env', 'production') == 'develop':
    DEBUG = True
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('POSTGRES_DB', 'airobot'),
            'USER': os.environ.get('POSTGRES_USER', 'airobot'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD', ''),
            'HOST': os.environ.get('POSTGRES_HOST', 'localhost'),
            'PORT': os.environ.get('POSTGRES_PORT', '5432'),
            'TEST_CHARSET': 'utf8',
            'TEST_COLLATION': 'utf8_general_ci',
        }
    }

    REDIS_CONF = {
        'host': os.environ.get('REDIS_HOST', 'localhost'),
        'port': os.environ.get('REDIS_PORT', '6379')
    }
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]
else:
    DEBUG = False
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('POSTGRES_DB', 'vj_database'),
            'USER': os.environ.get('POSTGRES_USER', 'vj_username'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'vj_password'),
            'HOST': os.environ.get('POSTGRES_HOST', 'vj-postgres'),
            'PORT': os.environ.get('POSTGRES_PORT', '5432'),
            'TEST_CHARSET': 'utf8',
            'TEST_COLLATION': 'utf8_general_ci',
        }
    }

    REDIS_CONF = {
        'host': os.environ.get('REDIS_HOST', 'vj-redis'),
        'port': os.environ.get('REDIS_PORT', '6379')
    }
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vjweb',
    'config',
    'django_celery_results',
    'django_celery_beat',
    'django_select2',
    'problem',
    'contest',
    'submission',
    'rank',
    'discuss',
    'user',
    'api',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'VirtualJudge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'VirtualJudge.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# my settings
AUTH_USER_MODEL = 'user.User'
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'
PROBLEMS_PER_PAGE = 30
SUBMISSIONS_PER_PAGE = 30
USERS_PER_PAGE = 10
CONTESTS_PER_PAGE = 10
NEWS_PER_PAGE = 5

#  ---------------------------------------------------------
#  Email
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.mxhichina.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'postmaster@vjudge.top'
EMAIL_HOST_PASSWORD = 'Bushini123'
DEFAULT_FROM_EMAIL = 'postmaster@vjudge.top'
#  ---------------------------------------------------------

REDIS_URL = f"redis://{REDIS_CONF['host']}:{REDIS_CONF['port']}"
# CELERY_RESULT_BACKEND = f'{REDIS_URL}/0'
BROKER_URL = f'{REDIS_URL}/1'
CELERY_TASK_SOFT_TIME_LIMIT = CELERY_TASK_TIME_LIMIT = 120
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# celery 4.2下存在间隔/定时任务发送异常的bug
CELERY_ENABLE_UTC = True
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERY_RESULT_BACKEND = 'django-db'

REST_FRAMEWORK_TOKEN_EXPIRE_MINUTES = 60

# http://django-select2.readthedocs.io/en/latest/django_select2.html#module-django_select2.conf
# # Set the cache backend to select2
# SELECT2_CACHE_BACKEND = 'select2'
# SELECT2_JS = 'assets/js/select2.min.js'
# SELECT2_CSS = 'assets/css/select2.css'
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}
